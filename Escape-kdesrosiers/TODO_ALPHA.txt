===========
Coordinates
===========

1. Create classes for HexCoordinate, SquareCoordinate, and OrthoSquareCoordinate [DONE]
2. Override hashCode() and equals() in HexCoordinate and OrthoSquareCoordinate [DONE]
4. is coordinate valid [DONE]
	-HexBoard, limits(0,0), coord(1,1) -> true
	-HexBoard, limits(0,0), coord(-1,-8) -> true
	-HexBoard, limits(0,1), coord(-1,1) -> true
	-HexBoard, limits(0,1). coord(1,2) -> false
	-SquareBoard, limits(8,8), coord(-1,-8) -> false
	-SquareBoard, limits(8,8), coord(1,8) -> true
	-SquareBoard, limits(8,8), coord(9,8) -> false
	
6. distanceTo for hex coordinates [DONE]
	-(0,-3) to (0,4) -> 7
	-(2,-2) to (2,0) -> 2
	-(-3,0) to (0,-2) -> 3
	-(1,1) to (2,2) -> 2
	-(-1,2) to (0,-2) -> 4
	-(-1,-1) to (2,-2) -> 3
	-(0,0) to (-1,2) -> 2
	-(-1,2) to (2,-2) -> 4
	-(1,1) to (1,1) -> 0
	-(1,2) to (-2,-1) -> 6
	
7. distanceTo for orthosquare coordinates [DONE]
	-(1,3) to (1,4) -> 1
	-(1,2) to (3,5) -> 5
	-(1,1) to (2,2) -> 2
	-(1,1) to (8,8) -> 14
	-(4,2) to (2,4) -> 4
	-(1,3) to (6,7) -> 9
	-(4,1) to (1,4) -> 6
	-(1,1) to (1,1) -> 0
	-(1,1) to (1,8) -> 7

8. distanceTo for square coordinates [DONE]
	-(1,1) to (2,1) -> 1
	-(1,1) to (5,5) -> 4
	-(1,1) to (4,5) -> 4
	-(1,1) to (5,1) -> 4
	-(1,1) to (2,2) -> 1
	-(1,2) to (3,5) -> 3
	-(1,1) to (1,1) -> 0
	-(6,1) to (6,6) -> 5


======
Boards
======
3. create class for HexBoard [DONE]
5. creating factory for boards/boardBuilder [DONE]
	-create a hex board -> not null
	-create a square board with square coordinates -> not null
	-create a square board with orthosquare coordinates -> not null


9. putPieceAt/getPieceAt: [DONE]
	-make hex board, try to place a piece on blocked -> EscapeException("There is a piece in the way!");
	-make orthosquare board, try to place a piece on blocked -> EscapeException("There is a piece in the way!");
	-make square board, try to place a piece on blocked -> EscapeException("There is a piece in the way!");
	-make hex board, try to place a piece on exit, get piece -> null;
	-make orthosquare board, try to place a piece on exit, get piece -> null;
	-make square board, try to place a piece on exit, get piece -> null;
	-make hex board, try to place a null on piece, get piece -> null;
	-make orthosquare board, try to place a null on piece, get piece -> null;
	-make square board, try to place a null on piece, get piece -> null;
	-make hex board, try to place a piece on null, get piece -> not null;
	-make orthosquare board, try to place a piece on null, get piece -> not null;
	-make square board, try to place a piece on null, get piece -> not null;
	-make square board, place piece at invalid coordinate -> EscapeException("This coordinate is not valid!");
	

10. initialize all other spaces on the board to be clear [DONE]
	-make hex board, make coord at (5,5), get location type -> CLEAR
	-make square board, make coord at (5,5), get location type -> CLEAR
	-make orthosquare board, make coord at (5,5), get location type -> CLEAR

11. re-format all code!